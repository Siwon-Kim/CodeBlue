window.jest_html_reporters_callback__({"numFailedTestSuites":4,"numFailedTests":2,"numPassedTestSuites":3,"numPassedTests":17,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":2,"numTodoTests":0,"numTotalTestSuites":7,"numTotalTests":19,"startTime":1685555578872,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"C:\\Users\\Summer\\Desktop\\sparta\\codeblue\\CodeBlue_clo\\src\\patients\\controller\\patients.controller.spec.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/patients/service/patients.service.ts\u001b[0m:\u001b[93m10\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2306: \u001b[0mFile 'C:/Users/Summer/Desktop/sparta/codeblue/CodeBlue_clo/src/patients/constants/symtoms.ts' is not a module.\n\n    \u001b[7m10\u001b[0m } from '../constants/symtoms';\n    \u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"C:\\Users\\Summer\\Desktop\\sparta\\codeblue\\CodeBlue_clo\\src\\patients\\service\\patients.service.spec.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/patients/service/patients.service.spec.ts\u001b[0m:\u001b[93m10\u001b[0m:\u001b[93m8\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2307: \u001b[0mCannot find module './constants/symptoms' or its corresponding type declarations.\n\n    \u001b[7m10\u001b[0m } from './constants/symptoms';\n    \u001b[7m  \u001b[0m \u001b[91m       ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n","testResults":[]},{"numFailingTests":1,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685555622633,"runtime":40722,"slow":true,"start":1685555581911},"testFilePath":"C:\\Users\\Summer\\Desktop\\sparta\\codeblue\\CodeBlue_clo\\src\\requests\\service\\requests.service.spec.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRequestsService Unit Testing › getAllRequests() › getAllRequests request must be performed successfully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m[]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 69 |\u001b[39m         \u001b[33m.\u001b[39mmockResolvedValueOnce(allReports \u001b[36mas\u001b[39m \u001b[33mReports\u001b[39m[])\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 70 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 71 |\u001b[39m       expect(\u001b[36mawait\u001b[39m requestsService\u001b[33m.\u001b[39mgetAllRequests())\u001b[33m.\u001b[39mtoBe(allReports)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 72 |\u001b[39m       expect(requestsRepository\u001b[33m.\u001b[39mgetAllRequests)\u001b[33m.\u001b[39mtoBeCalledTimes(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 73 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 74 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mrequests/service/requests.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:71:54)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["RequestsService Unit Testing","getAllRequests()"],"duration":61,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m[]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (C:\\Users\\Summer\\Desktop\\sparta\\codeblue\\CodeBlue_clo\\src\\requests\\service\\requests.service.spec.ts:71:54)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"RequestsService Unit Testing getAllRequests() getAllRequests request must be performed successfully","status":"failed","title":"getAllRequests request must be performed successfully"},{"ancestorTitles":["RequestsService Unit Testing","getSearchRequests()"],"duration":18,"failureMessages":[],"fullName":"RequestsService Unit Testing getSearchRequests() getSearchRequests request must be performed successfully","status":"passed","title":"getSearchRequests request must be performed successfully"},{"ancestorTitles":["RequestsService Unit Testing","createRequest()"],"duration":17,"failureMessages":[],"fullName":"RequestsService Unit Testing createRequest() should create a request successfully","status":"passed","title":"should create a request successfully"},{"ancestorTitles":["RequestsService Unit Testing","createRequest()"],"duration":15,"failureMessages":[],"fullName":"RequestsService Unit Testing createRequest() should throw NotFoundException when hospital does not exist","status":"passed","title":"should throw NotFoundException when hospital does not exist"},{"ancestorTitles":["RequestsService Unit Testing","createRequest()"],"duration":21,"failureMessages":[],"fullName":"RequestsService Unit Testing createRequest() should throw NotFoundException when report does not exist","status":"passed","title":"should throw NotFoundException when report does not exist"},{"ancestorTitles":["RequestsService Unit Testing","createRequest()"],"duration":10,"failureMessages":[],"fullName":"RequestsService Unit Testing createRequest() should throw HttpException when report is already sent","status":"passed","title":"should throw HttpException when report is already sent"},{"ancestorTitles":["RequestsService Unit Testing","createRequest()"],"duration":9,"failureMessages":[],"fullName":"RequestsService Unit Testing createRequest() should throw HttpException when hospital has no available beds","status":"passed","title":"should throw HttpException when hospital has no available beds"},{"ancestorTitles":["RequestsService Unit Testing","createRequest()"],"duration":7,"failureMessages":[],"fullName":"RequestsService Unit Testing createRequest() should throw HttpException when there is an error during transaction","status":"passed","title":"should throw HttpException when there is an error during transaction"}]},{"numFailingTests":1,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685555622703,"runtime":40926,"slow":true,"start":1685555581777},"testFilePath":"C:\\Users\\Summer\\Desktop\\sparta\\codeblue\\CodeBlue_clo\\src\\reports\\service\\reports.service.spec.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mReportsService Unit Testing › updatePatientLocation() › should update the patient location\u001b[39m\u001b[22m\n\n    HttpException: 사용자 현재 위치 변경에 실패하였습니다.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 50 |\u001b[39m         \u001b[36mthrow\u001b[39m error\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 51 |\u001b[39m       }\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 52 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mHttpException\u001b[39m(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 53 |\u001b[39m         \u001b[32m'사용자 현재 위치 변경에 실패하였습니다.'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 54 |\u001b[39m         \u001b[33mHttpStatus\u001b[39m\u001b[33m.\u001b[39m\u001b[33mINTERNAL_SERVER_ERROR\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 55 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ReportsService.updatePatientLocation (\u001b[22m\u001b[2mreports/service/reports.service.ts\u001b[2m:52:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mreports/service/reports.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:53:22)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["ReportsService Unit Testing","updatePatientLocation()"],"duration":80,"failureMessages":["HttpException: 사용자 현재 위치 변경에 실패하였습니다.\n    at ReportsService.updatePatientLocation (C:\\Users\\Summer\\Desktop\\sparta\\codeblue\\CodeBlue_clo\\src\\reports\\service\\reports.service.ts:52:13)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at Object.<anonymous> (C:\\Users\\Summer\\Desktop\\sparta\\codeblue\\CodeBlue_clo\\src\\reports\\service\\reports.service.spec.ts:53:22)"],"fullName":"ReportsService Unit Testing updatePatientLocation() should update the patient location","status":"failed","title":"should update the patient location"},{"ancestorTitles":["ReportsService Unit Testing","updatePatientLocation()"],"duration":17,"failureMessages":[],"fullName":"ReportsService Unit Testing updatePatientLocation() should throw NotFoundException if the report does not exist","status":"passed","title":"should throw NotFoundException if the report does not exist"},{"ancestorTitles":["ReportsService Unit Testing","updatePatientLocation()"],"duration":13,"failureMessages":[],"fullName":"ReportsService Unit Testing updatePatientLocation() should throw HttpException for other errors","status":"passed","title":"should throw HttpException for other errors"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685555628907,"runtime":6064,"slow":true,"start":1685555622843},"testFilePath":"C:\\Users\\Summer\\Desktop\\sparta\\codeblue\\CodeBlue_clo\\src\\requests\\controller\\requests.controller.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RequestsController Unit Testing","getAllRequests()"],"duration":49,"failureMessages":[],"fullName":"RequestsController Unit Testing getAllRequests() should get all obejct","status":"passed","title":"should get all obejct"},{"ancestorTitles":["RequestsController Unit Testing","getSearchRequests()"],"duration":41,"failureMessages":[],"fullName":"RequestsController Unit Testing getSearchRequests() should get searched object","status":"passed","title":"should get searched object"},{"ancestorTitles":["RequestsController Unit Testing","createRequest()"],"duration":9,"failureMessages":[],"fullName":"RequestsController Unit Testing createRequest() should return object","status":"passed","title":"should return object"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685555630639,"runtime":14148,"slow":true,"start":1685555616491},"testFilePath":"C:\\Users\\Summer\\Desktop\\sparta\\codeblue\\CodeBlue_clo\\src\\hospitals\\controller\\hospitals.controller.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["HospitalsController Unit Testing","getHospitals()"],"duration":37,"failureMessages":[],"fullName":"HospitalsController Unit Testing getHospitals() should get all Hospitals","status":"passed","title":"should get all Hospitals"},{"ancestorTitles":["HospitalsController Unit Testing","getLocalHospitals()"],"duration":11,"failureMessages":[],"fullName":"HospitalsController Unit Testing getLocalHospitals() should get local Hospitals","status":"passed","title":"should get local Hospitals"},{"ancestorTitles":["HospitalsController Unit Testing","getNationHospitals()"],"duration":10,"failureMessages":[],"fullName":"HospitalsController Unit Testing getNationHospitals() should get nation Hospitals","status":"passed","title":"should get nation Hospitals"},{"ancestorTitles":["HospitalsController Unit Testing","getRecommendedHospitals()"],"duration":9,"failureMessages":[],"fullName":"HospitalsController Unit Testing getRecommendedHospitals() should get recommended Hospitals","status":"passed","title":"should get recommended Hospitals"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685555630811,"runtime":8023,"slow":true,"start":1685555622788},"testFilePath":"C:\\Users\\Summer\\Desktop\\sparta\\codeblue\\CodeBlue_clo\\src\\reports\\controller\\reports.controller.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ReportsController Unit Testing","updatePatientLocation()"],"duration":82,"failureMessages":[],"fullName":"ReportsController Unit Testing updatePatientLocation() should return object","status":"passed","title":"should return object"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["**/*.(t|j)s"],"coverageDirectory":"C:\\Users\\Summer\\Desktop\\sparta\\codeblue\\CodeBlue_clo\\coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":3,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Users\\Summer\\Desktop\\sparta\\codeblue\\CodeBlue_clo\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./src/commons/utils/html-jest-report","filename":"report.html","openReport":true,"includeFailureMsg":true}]],"rootDir":"C:\\Users\\Summer\\Desktop\\sparta\\codeblue\\CodeBlue_clo\\src","runTestsByPath":false,"seed":-1445103570,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"C:\\Users\\Summer\\Desktop\\sparta\\codeblue\\CodeBlue_clo\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1685555631464,"_reporterOptions":{"publicPath":"./src/commons/utils/html-jest-report","filename":"report.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":true,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"includeFailureMsg":true},"logInfoMapping":{},"attachInfos":{}})