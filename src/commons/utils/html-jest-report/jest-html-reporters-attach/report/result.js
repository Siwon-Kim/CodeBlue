window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":7,"numPassedTests":24,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":8,"numTotalTests":25,"startTime":1685961502506,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685961511865,"runtime":8778,"slow":true,"start":1685961503087},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\requests\\controller\\requests.controller.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RequestsController Unit Testing","getAllRequests()"],"duration":13,"failureMessages":[],"fullName":"RequestsController Unit Testing getAllRequests() should get all obejct","status":"passed","title":"should get all obejct"},{"ancestorTitles":["RequestsController Unit Testing","getSearchRequests()"],"duration":10,"failureMessages":[],"fullName":"RequestsController Unit Testing getSearchRequests() should get searched object","status":"passed","title":"should get searched object"},{"ancestorTitles":["RequestsController Unit Testing","createRequest()"],"duration":3,"failureMessages":[],"fullName":"RequestsController Unit Testing createRequest() should return object","status":"passed","title":"should return object"},{"ancestorTitles":["RequestsController Unit Testing","withdrawRequest()"],"duration":2,"failureMessages":[],"fullName":"RequestsController Unit Testing withdrawRequest() should return object","status":"passed","title":"should return object"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685961511896,"runtime":8806,"slow":true,"start":1685961503090},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\patients\\service\\patients.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["PatientsService Unit Testing","createPatientInfo()"],"duration":19,"failureMessages":[],"fullName":"PatientsService Unit Testing createPatientInfo() should create patient info","status":"passed","title":"should create patient info"},{"ancestorTitles":["PatientsService Unit Testing","updatePatientInfo()"],"duration":7,"failureMessages":[],"fullName":"PatientsService Unit Testing updatePatientInfo() should update the patient info","status":"passed","title":"should update the patient info"}]},{"numFailingTests":1,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685961512129,"runtime":9025,"slow":true,"start":1685961503104},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\requests\\service\\requests.service.spec.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mRequestsService Unit Testing › createRequest() › should create a request successfully\u001b[39m\u001b[22m\n\n    NotFoundException: 병원이 존재하지 않습니다.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 122 |\u001b[39m           )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 123 |\u001b[39m           \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mhospital[\u001b[35m0\u001b[39m]) {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 124 |\u001b[39m             \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mNotFoundException\u001b[39m(\u001b[32m'병원이 존재하지 않습니다.'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 125 |\u001b[39m           }\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 126 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 127 |\u001b[39m           \u001b[36mconst\u001b[39m report \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mreportsRepository\u001b[33m.\u001b[39mfindReport(report_id)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mrequests/service/requests.service.ts\u001b[2m:124:19\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat RequestsService.createRequest (\u001b[22m\u001b[2mrequests/service/requests.service.ts\u001b[2m:116:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mrequests/service/requests.service.spec.ts\u001b[39m\u001b[0m\u001b[2m:136:22)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["RequestsService Unit Testing","getAllRequests()"],"duration":13,"failureMessages":[],"fullName":"RequestsService Unit Testing getAllRequests() getAllRequests request must be performed successfully","status":"passed","title":"getAllRequests request must be performed successfully"},{"ancestorTitles":["RequestsService Unit Testing","getSearchRequests()"],"duration":4,"failureMessages":[],"fullName":"RequestsService Unit Testing getSearchRequests() getSearchRequests request must be performed successfully","status":"passed","title":"getSearchRequests request must be performed successfully"},{"ancestorTitles":["RequestsService Unit Testing","createRequest()"],"duration":3,"failureMessages":["NotFoundException: 병원이 존재하지 않습니다.\n    at C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\requests\\service\\requests.service.ts:124:19\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at RequestsService.createRequest (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\requests\\service\\requests.service.ts:116:27)\n    at Object.<anonymous> (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\requests\\service\\requests.service.spec.ts:136:22)"],"fullName":"RequestsService Unit Testing createRequest() should create a request successfully","status":"failed","title":"should create a request successfully"},{"ancestorTitles":["RequestsService Unit Testing","withdrawRequest()"],"duration":4,"failureMessages":[],"fullName":"RequestsService Unit Testing withdrawRequest() should withdraw a request successfully","status":"passed","title":"should withdraw a request successfully"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685961512202,"runtime":9123,"slow":true,"start":1685961503079},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\patients\\controller\\patients.controller.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["PatientsController Unit Testing","createPatientInfo()"],"duration":13,"failureMessages":[],"fullName":"PatientsController Unit Testing createPatientInfo() should return object","status":"passed","title":"should return object"},{"ancestorTitles":["PatientsController Unit Testing","updatePatientInfo()"],"duration":4,"failureMessages":[],"fullName":"PatientsController Unit Testing updatePatientInfo() should return object","status":"passed","title":"should return object"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685961512205,"runtime":9144,"slow":true,"start":1685961503061},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\reports\\controller\\reports.controller.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ReportsController Unit Testing","updateReport()"],"duration":14,"failureMessages":[],"fullName":"ReportsController Unit Testing updateReport() should return object","status":"passed","title":"should return object"}]},{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685961512386,"runtime":9298,"slow":true,"start":1685961503088},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\reports\\service\\reports.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ReportsService Unit Testing","createReport"],"duration":21,"failureMessages":[],"fullName":"ReportsService Unit Testing createReport should create a report with correct symptom level","status":"passed","title":"should create a report with correct symptom level"},{"ancestorTitles":["ReportsService Unit Testing","getReportDetails()"],"duration":5,"failureMessages":[],"fullName":"ReportsService Unit Testing getReportDetails() should return the report details","status":"passed","title":"should return the report details"},{"ancestorTitles":["ReportsService Unit Testing","getReportDetails()"],"duration":13,"failureMessages":[],"fullName":"ReportsService Unit Testing getReportDetails() should throw NotFoundException if the report does not exist","status":"passed","title":"should throw NotFoundException if the report does not exist"},{"ancestorTitles":["ReportsService Unit Testing","updateReport()"],"duration":3,"failureMessages":[],"fullName":"ReportsService Unit Testing updateReport() should update report","status":"passed","title":"should update report"},{"ancestorTitles":["ReportsService Unit Testing","updateReport()"],"duration":8,"failureMessages":[],"fullName":"ReportsService Unit Testing updateReport() should throw NotFoundException if the report does not exist","status":"passed","title":"should throw NotFoundException if the report does not exist"},{"ancestorTitles":["ReportsService Unit Testing","updateReport()"],"duration":2,"failureMessages":[],"fullName":"ReportsService Unit Testing updateReport() should throw HttpException for other errors","status":"passed","title":"should throw HttpException for other errors"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685961512670,"runtime":9566,"slow":true,"start":1685961503104},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\hospitals\\service\\hospitals.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ReportsService Unit Testing","getHospitals()"],"duration":10,"failureMessages":[],"fullName":"ReportsService Unit Testing getHospitals() getHospitals request must be performed successfully","status":"passed","title":"getHospitals request must be performed successfully"},{"ancestorTitles":["ReportsService Unit Testing","getHospitals()"],"duration":3,"failureMessages":[],"fullName":"ReportsService Unit Testing getHospitals() getLocalHospitals request must be performed successfully","status":"passed","title":"getLocalHospitals request must be performed successfully"},{"ancestorTitles":["ReportsService Unit Testing","getHospitals()"],"duration":5,"failureMessages":[],"fullName":"ReportsService Unit Testing getHospitals() getNationHospitals request must be performed successfully","status":"passed","title":"getNationHospitals request must be performed successfully"},{"ancestorTitles":["ReportsService Unit Testing","getHospitals()"],"duration":3,"failureMessages":[],"fullName":"ReportsService Unit Testing getHospitals() getRecommendedHospitals request must be performed successfully","status":"passed","title":"getRecommendedHospitals request must be performed successfully"}]},{"numFailingTests":0,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685961512717,"runtime":9616,"slow":true,"start":1685961503101},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\hospitals\\controller\\hospitals.controller.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["HospitalsController Unit Testing","getLocalHospitals()"],"duration":10,"failureMessages":[],"fullName":"HospitalsController Unit Testing getLocalHospitals() should get local Hospitals","status":"passed","title":"should get local Hospitals"},{"ancestorTitles":["HospitalsController Unit Testing","getRecommendedHospitals()"],"duration":3,"failureMessages":[],"fullName":"HospitalsController Unit Testing getRecommendedHospitals() should get recommended Hospitals","status":"passed","title":"should get recommended Hospitals"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["**/*.(t|j)s"],"coverageDirectory":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":15,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./src/commons/utils/html-jest-report","filename":"report.html","includeFailureMsg":true}]],"rootDir":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src","runTestsByPath":false,"seed":-923976189,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1685961512841,"_reporterOptions":{"publicPath":"./src/commons/utils/html-jest-report","filename":"report.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"includeFailureMsg":true},"logInfoMapping":{},"attachInfos":{}})