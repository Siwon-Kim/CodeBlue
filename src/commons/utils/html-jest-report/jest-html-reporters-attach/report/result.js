window.jest_html_reporters_callback__({"numFailedTestSuites":2,"numFailedTests":2,"numPassedTestSuites":4,"numPassedTests":16,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":1,"numTodoTests":0,"numTotalTestSuites":6,"numTotalTests":18,"startTime":1685670369207,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\hospitals\\service\\hospitals.service.spec.ts","failureMessage":"  \u001b[1m‚óè \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/hospitals/service/hospitals.service.spec.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m51\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 3, '(object: HospitalsService, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type 'string' is not assignable to parameter of type 'never'.\n      Overload 2 of 3, '(object: HospitalsService, method: keyof HospitalsService): SpyInstance<Promise<Hospitals[]> | Promise<string[]> | Promise<...> | Promise<...>, [] | ... 1 more ... | [report_id: ...], any>', gave the following error.\n        Argument of type '\"harversine\"' is not assignable to parameter of type 'keyof HospitalsService'.\n\n    \u001b[7m117\u001b[0m       const harver = jest.spyOn(hospitalsService, 'harversine');\n    \u001b[7m   \u001b[0m \u001b[91m                                                  ~~~~~~~~~~~~\u001b[0m\n\n    \u001b[96msrc/hospitals/service/hospitals.service.spec.ts\u001b[0m:\u001b[93m121\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 3, '(object: ReportsRepository, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type 'string' is not assignable to parameter of type 'never'.\n      Overload 2 of 3, '(object: ReportsRepository, method: \"createQueryBuilder\" | \"hasId\" | \"getId\" | \"create\" | \"merge\" | \"preload\" | \"save\" | \"remove\" | \"softRemove\" | \"recover\" | ... 33 more ... | \"addTargetHospital\"): SpyInstance<...>', gave the following error.\n        Argument of type '\"userLocation\"' is not assignable to parameter of type '\"createQueryBuilder\" | \"hasId\" | \"getId\" | \"create\" | \"merge\" | \"preload\" | \"save\" | \"remove\" | \"softRemove\" | \"recover\" | \"insert\" | \"update\" | \"upsert\" | \"delete\" | \"softDelete\" | ... 28 more ... | \"addTargetHospital\"'.\n\n    \u001b[7m121\u001b[0m         .spyOn(reportsRepository, 'userLocation')\n    \u001b[7m   \u001b[0m \u001b[91m                                  ~~~~~~~~~~~~~~\u001b[0m\n\n    \u001b[96msrc/hospitals/service/hospitals.service.spec.ts\u001b[0m:\u001b[93m122\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'number[]' is not assignable to parameter of type 'never'.\n\n    \u001b[7m122\u001b[0m         .mockResolvedValueOnce(userLocation);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/hospitals/service/hospitals.service.spec.ts\u001b[0m:\u001b[93m124\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2769: \u001b[0mNo overload matches this call.\n      Overload 1 of 3, '(object: HospitalsRepository, method: never): SpyInstance<never, never, any>', gave the following error.\n        Argument of type 'string' is not assignable to parameter of type 'never'.\n      Overload 2 of 3, '(object: HospitalsRepository, method: \"getHospitals\" | \"findHospital\" | \"updateAvailableBeds\" | \"setDefaultAvailableBeds\" | \"getHospitalsWithinRadius\" | ... 38 more ... | \"extend\"): SpyInstance<...>', gave the following error.\n        Argument of type '\"AllHospitals\"' is not assignable to parameter of type '\"getHospitals\" | \"findHospital\" | \"updateAvailableBeds\" | \"setDefaultAvailableBeds\" | \"getHospitalsWithinRadius\" | \"getHospitalsWithoutRadius\" | \"createQueryBuilder\" | ... 36 more ... | \"extend\"'.\n\n    \u001b[7m124\u001b[0m         .spyOn(hospitalsRepository, 'AllHospitals')\n    \u001b[7m   \u001b[0m \u001b[91m                                    ~~~~~~~~~~~~~~\u001b[0m\n\n    \u001b[96msrc/hospitals/service/hospitals.service.spec.ts\u001b[0m:\u001b[93m125\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'Hospitals[]' is not assignable to parameter of type 'never'.\n\n    \u001b[7m125\u001b[0m         .mockResolvedValueOnce(allHospitals);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/hospitals/service/hospitals.service.spec.ts\u001b[0m:\u001b[93m131\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n    \u001b[7m131\u001b[0m         await hospitalsService.getRecommendedHospitals(report_id),\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n      \u001b[96msrc/hospitals/service/hospitals.service.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m5\u001b[0m\n        \u001b[7m46\u001b[0m     queries: object,\n        \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~~~~~~~~~~\u001b[0m\n        An argument for 'queries' was not provided.\n    \u001b[96msrc/hospitals/service/hospitals.service.spec.ts\u001b[0m:\u001b[93m133\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'userLocation' does not exist on type 'ReportsRepository'.\n\n    \u001b[7m133\u001b[0m       expect(reportsRepository.userLocation).toHaveBeenCalledTimes(1);\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/hospitals/service/hospitals.service.spec.ts\u001b[0m:\u001b[93m134\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'AllHospitals' does not exist on type 'HospitalsRepository'.\n\n    \u001b[7m134\u001b[0m       expect(hospitalsRepository.AllHospitals).toHaveBeenCalledTimes(1);\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/hospitals/service/hospitals.service.spec.ts\u001b[0m:\u001b[93m137\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'harversine' does not exist on type 'HospitalsService'.\n\n    \u001b[7m137\u001b[0m         await hospitalsService.harversine(startLat, startLng, endLat, endLng),\n    \u001b[7m   \u001b[0m \u001b[91m                               ~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/hospitals/service/hospitals.service.spec.ts\u001b[0m:\u001b[93m154\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'ConvertRadians' does not exist on type 'HospitalsRepository'.\n\n    \u001b[7m154\u001b[0m       expect(hospitalsRepository.ConvertRadians).toHaveBeenCalledTimes(4);\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~~~\u001b[0m\n    \u001b[96msrc/hospitals/service/hospitals.service.spec.ts\u001b[0m:\u001b[93m155\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'arcLength' does not exist on type 'HospitalsRepository'.\n\n    \u001b[7m155\u001b[0m       expect(hospitalsRepository.arcLength).toHaveBeenCalledTimes(1);\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/hospitals/service/hospitals.service.spec.ts\u001b[0m:\u001b[93m156\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'centralAngle' does not exist on type 'HospitalsRepository'.\n\n    \u001b[7m156\u001b[0m       expect(hospitalsRepository.centralAngle).toHaveBeenCalledTimes(1);\n    \u001b[7m   \u001b[0m \u001b[91m                                 ~~~~~~~~~~~~\u001b[0m\n","testResults":[]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685670377337,"runtime":7568,"slow":true,"start":1685670369769},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\reports\\service\\reports.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ReportsService Unit Testing","updateReportPatientInfo()"],"duration":13,"failureMessages":[],"fullName":"ReportsService Unit Testing updateReportPatientInfo() should update the patient location","status":"passed","title":"should update the patient location"},{"ancestorTitles":["ReportsService Unit Testing","updateReportPatientInfo()"],"duration":11,"failureMessages":[],"fullName":"ReportsService Unit Testing updateReportPatientInfo() should throw NotFoundException if the report does not exist","status":"passed","title":"should throw NotFoundException if the report does not exist"},{"ancestorTitles":["ReportsService Unit Testing","updateReportPatientInfo()"],"duration":3,"failureMessages":[],"fullName":"ReportsService Unit Testing updateReportPatientInfo() should throw HttpException for other errors","status":"passed","title":"should throw HttpException for other errors"}]},{"numFailingTests":0,"numPassingTests":3,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685670377347,"runtime":7570,"slow":true,"start":1685670369777},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\requests\\controller\\requests.controller.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RequestsController Unit Testing","getAllRequests()"],"duration":12,"failureMessages":[],"fullName":"RequestsController Unit Testing getAllRequests() should get all obejct","status":"passed","title":"should get all obejct"},{"ancestorTitles":["RequestsController Unit Testing","getSearchRequests()"],"duration":10,"failureMessages":[],"fullName":"RequestsController Unit Testing getSearchRequests() should get searched object","status":"passed","title":"should get searched object"},{"ancestorTitles":["RequestsController Unit Testing","createRequest()"],"duration":3,"failureMessages":[],"fullName":"RequestsController Unit Testing createRequest() should return object","status":"passed","title":"should return object"}]},{"numFailingTests":0,"numPassingTests":7,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685670377800,"runtime":8028,"slow":true,"start":1685670369772},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\requests\\service\\requests.service.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["RequestsService Unit Testing","getAllRequests()"],"duration":20,"failureMessages":[],"fullName":"RequestsService Unit Testing getAllRequests() getAllRequests request must be performed successfully","status":"passed","title":"getAllRequests request must be performed successfully"},{"ancestorTitles":["RequestsService Unit Testing","createRequest()"],"duration":5,"failureMessages":[],"fullName":"RequestsService Unit Testing createRequest() should create a request successfully","status":"passed","title":"should create a request successfully"},{"ancestorTitles":["RequestsService Unit Testing","createRequest()"],"duration":15,"failureMessages":[],"fullName":"RequestsService Unit Testing createRequest() should throw NotFoundException when hospital does not exist","status":"passed","title":"should throw NotFoundException when hospital does not exist"},{"ancestorTitles":["RequestsService Unit Testing","createRequest()"],"duration":2,"failureMessages":[],"fullName":"RequestsService Unit Testing createRequest() should throw NotFoundException when report does not exist","status":"passed","title":"should throw NotFoundException when report does not exist"},{"ancestorTitles":["RequestsService Unit Testing","createRequest()"],"duration":4,"failureMessages":[],"fullName":"RequestsService Unit Testing createRequest() should throw HttpException when report is already sent","status":"passed","title":"should throw HttpException when report is already sent"},{"ancestorTitles":["RequestsService Unit Testing","createRequest()"],"duration":3,"failureMessages":[],"fullName":"RequestsService Unit Testing createRequest() should throw HttpException when hospital has no available beds","status":"passed","title":"should throw HttpException when hospital has no available beds"},{"ancestorTitles":["RequestsService Unit Testing","createRequest()"],"duration":2,"failureMessages":[],"fullName":"RequestsService Unit Testing createRequest() should throw HttpException when there is an error during transaction","status":"passed","title":"should throw HttpException when there is an error during transaction"}]},{"numFailingTests":0,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685670377988,"runtime":8213,"slow":true,"start":1685670369775},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\reports\\controller\\reports.controller.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["ReportsController Unit Testing","updateReportPatientInfo()"],"duration":15,"failureMessages":[],"fullName":"ReportsController Unit Testing updateReportPatientInfo() should return object","status":"passed","title":"should return object"}]},{"numFailingTests":2,"numPassingTests":2,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1685670378196,"runtime":8425,"slow":true,"start":1685670369771},"testFilePath":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\hospitals\\controller\\hospitals.controller.spec.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m‚óè \u001b[22m\u001b[1mHospitalsController Unit Testing ‚Ä∫ getHospitals() ‚Ä∫ should get all Hospitals\u001b[39m\u001b[22m\n\n    TypeError: hospitalsController.getHospitals is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 |\u001b[39m         \u001b[33m.\u001b[39mmockImplementation(() \u001b[33m=>\u001b[39m allHospitals)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 35 |\u001b[39m       expect(\u001b[36mawait\u001b[39m hospitalsController\u001b[33m.\u001b[39mgetHospitals())\u001b[33m.\u001b[39mtoBe(allHospitals)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 |\u001b[39m       expect(hospitalsService\u001b[33m.\u001b[39mgetHospitals)\u001b[33m.\u001b[39mtoBeCalledTimes(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 37 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 38 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mhospitals/controller/hospitals.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:35:40)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m‚óè \u001b[22m\u001b[1mHospitalsController Unit Testing ‚Ä∫ getNationHospitals() ‚Ä∫ should get nation Hospitals\u001b[39m\u001b[22m\n\n    TypeError: hospitalsController.getNationHospitals is not a function\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 59 |\u001b[39m         \u001b[33m.\u001b[39mmockImplementation(() \u001b[33m=>\u001b[39m nationHospitals)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 60 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 61 |\u001b[39m       expect(\u001b[36mawait\u001b[39m hospitalsController\u001b[33m.\u001b[39mgetNationHospitals())\u001b[33m.\u001b[39mtoBe(\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 62 |\u001b[39m         nationHospitals\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 63 |\u001b[39m       )\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 64 |\u001b[39m       expect(hospitalsService\u001b[33m.\u001b[39mgetNationHospitals)\u001b[33m.\u001b[39mtoBeCalledTimes(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mhospitals/controller/hospitals.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:61:40)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["HospitalsController Unit Testing","getHospitals()"],"duration":10,"failureMessages":["TypeError: hospitalsController.getHospitals is not a function\n    at Object.<anonymous> (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\hospitals\\controller\\hospitals.controller.spec.ts:35:40)\n    at Promise.then.completed (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\utils.js:293:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\utils.js:226:10)\n    at _callCircusTest (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\run.js:297:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at _runTest (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\run.js:233:3)\n    at _runTestsForDescribeBlock (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\run.js:135:9)\n    at _runTestsForDescribeBlock (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\run.js:130:9)\n    at _runTestsForDescribeBlock (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\run.js:130:9)\n    at run (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\run.js:68:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"HospitalsController Unit Testing getHospitals() should get all Hospitals","status":"failed","title":"should get all Hospitals"},{"ancestorTitles":["HospitalsController Unit Testing","getLocalHospitals()"],"duration":5,"failureMessages":[],"fullName":"HospitalsController Unit Testing getLocalHospitals() should get local Hospitals","status":"passed","title":"should get local Hospitals"},{"ancestorTitles":["HospitalsController Unit Testing","getNationHospitals()"],"duration":2,"failureMessages":["TypeError: hospitalsController.getNationHospitals is not a function\n    at Object.<anonymous> (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src\\hospitals\\controller\\hospitals.controller.spec.ts:61:40)\n    at Promise.then.completed (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\utils.js:293:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\utils.js:226:10)\n    at _callCircusTest (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\run.js:297:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at _runTest (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\run.js:233:3)\n    at _runTestsForDescribeBlock (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\run.js:135:9)\n    at _runTestsForDescribeBlock (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\run.js:130:9)\n    at _runTestsForDescribeBlock (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\run.js:130:9)\n    at run (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\run.js:68:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-runner\\build\\runTest.js:444:34)\n    at Object.worker (C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-runner\\build\\testWorker.js:106:12)"],"fullName":"HospitalsController Unit Testing getNationHospitals() should get nation Hospitals","status":"failed","title":"should get nation Hospitals"},{"ancestorTitles":["HospitalsController Unit Testing","getRecommendedHospitals()"],"duration":7,"failureMessages":[],"fullName":"HospitalsController Unit Testing getRecommendedHospitals() should get recommended Hospitals","status":"passed","title":"should get recommended Hospitals"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["**/*.(t|j)s"],"coverageDirectory":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":15,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\jest-html-reporters\\index.js",{"publicPath":"./src/commons/utils/html-jest-report","filename":"report.html","openReport":true,"includeFailureMsg":true}]],"rootDir":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\src","runTestsByPath":false,"seed":419752497,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"C:\\Users\\siwon\\Desktop\\Voyage99\\projects\\CodeBlue\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1685670378315,"_reporterOptions":{"publicPath":"./src/commons/utils/html-jest-report","filename":"report.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":true,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"includeFailureMsg":true},"logInfoMapping":{},"attachInfos":{}})